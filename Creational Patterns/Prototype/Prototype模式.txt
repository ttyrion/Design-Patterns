Prototype模式同样也封装了创建新对象实例的复杂性。
它的意义是通过拷贝一个已存在的对象来提供对象，而不是创建一个新的对象实例（特别是可能创建新实例很好资源(costly)）。
这个已经存在的对象扮演了一个"prototype"的角色，并且包含对象的状态。被拷贝生成的新对象包含同样的状态，当然也可以根据需要去改变这个状态。
因此，Prototype模式会节约资源和时间，特别是当创建对象是一种很重的操作时。

关键要素：
1、原型(Prototype):实际将要被用到的对象的原型对象
2、原型注册(Prototype registry)：作为一种注册服务，能够注册所有能被放问的原型对象。

